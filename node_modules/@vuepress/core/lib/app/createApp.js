"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createApp = void 0;
const markdown_1 = require("@vuepress/markdown");
const pluginApi_1 = require("../pluginApi");
const themeApi_1 = require("../themeApi");
const appInit_1 = require("./appInit");
const appPrepare_1 = require("./appPrepare");
const appUse_1 = require("./appUse");
const appUseByConfig_1 = require("./appUseByConfig");
const createAppDir_1 = require("./createAppDir");
const createAppEnv_1 = require("./createAppEnv");
const createAppOptions_1 = require("./createAppOptions");
const createAppSiteData_1 = require("./createAppSiteData");
const createAppVersion_1 = require("./createAppVersion");
const createAppWriteTemp_1 = require("./createAppWriteTemp");
const resolveBundler_1 = require("./resolveBundler");
/**
 * Create vuepress app
 */
const createApp = (config) => {
    const version = createAppVersion_1.createAppVersion();
    const options = createAppOptions_1.createAppOptions(config);
    const dir = createAppDir_1.createAppDir(options);
    const env = createAppEnv_1.createAppEnv(options);
    const siteData = createAppSiteData_1.createAppSiteData(options);
    const markdown = markdown_1.createMarkdown(options.markdown);
    const pluginApi = pluginApi_1.createPluginApi();
    const writeTemp = createAppWriteTemp_1.createAppWriteTemp(dir);
    const app = {
        version,
        options,
        dir,
        env,
        siteData,
        markdown,
        pluginApi,
        writeTemp,
        use: (...args) => appUse_1.appUse(app, ...args),
        useByConfig: (...args) => appUseByConfig_1.appUseByConfig(app, ...args),
        init: () => appInit_1.appInit(app),
        prepare: () => appPrepare_1.appPrepare(app),
        dev: () => resolveBundler_1.resolveBundler(options).dev(app),
        build: () => resolveBundler_1.resolveBundler(options).build(app),
    };
    // create theme api, resolve themes and layouts
    app.themeApi = themeApi_1.createThemeApi(app);
    // use theme plugin
    if (app.themeApi.parentTheme) {
        app.use(app.themeApi.parentTheme.plugin);
    }
    app.use(app.themeApi.theme.plugin);
    return app;
};
exports.createApp = createApp;
