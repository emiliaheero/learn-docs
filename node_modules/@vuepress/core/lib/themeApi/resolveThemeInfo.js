"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveThemeInfo = void 0;
const shared_1 = require("@vuepress/shared");
const utils_1 = require("@vuepress/utils");
const app_1 = require("../app");
const resolveThemeLayouts_1 = require("./resolveThemeLayouts");
const resolveThemeInfo = (app, themeName) => {
    // resolve theme entry according to theme name
    const themeEntry = utils_1.requireResolve(utils_1.path.isAbsolute(themeName)
        ? themeName
        : shared_1.normalizePackageName(themeName, 'vuepress', 'theme'));
    if (themeEntry === null) {
        throw utils_1.logger.createError(`theme is not found: ${utils_1.chalk.magenta(themeName)}`);
    }
    // normalize theme plugin from theme entry
    const themePlugin = app_1.normalizePlugin(app, themeEntry, app.options.themeConfig);
    // get theme path
    const themePath = themeEntry.match(/.(js|ts)$/)
        ? utils_1.path.dirname(themeEntry)
        : themeEntry;
    // resolve theme layouts
    const layouts = resolveThemeLayouts_1.resolveThemeLayouts({
        themePath,
        themePlugin,
    });
    return {
        plugin: themePlugin,
        layouts,
    };
};
exports.resolveThemeInfo = resolveThemeInfo;
